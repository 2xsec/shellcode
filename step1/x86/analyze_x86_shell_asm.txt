
(gdb) b _start
Breakpoint 1 at 0x8048736
(gdb) b __libc_start_main
Breakpoint 2 at 0x8048bb0
(gdb) b generic_start_main
Breakpoint 3 at 0x80488b0
(gdb) b __libc_csu_init
Breakpoint 4 at 0x80492e0
(gdb) b *main
Breakpoint 5 at 0x804887c
(gdb) i r
The program has no registers now.
(gdb) i b
Num     Type           Disp Enb Address    What
1       breakpoint     keep y   0x08048736 <_start>
2       breakpoint     keep y   0x08048bb0 <__libc_start_main>
3       breakpoint     keep y   0x080488b0 <generic_start_main>
4       breakpoint     keep y   0x080492e0 <__libc_csu_init>
5       breakpoint     keep y   0x0804887c <main>
(gdb) 

(gdb) r
Starting program: /home/guybrush/Project/github/hack/shellcode/shell 

Breakpoint 1, 0x08048736 in _start ()
(gdb) bt
#0  0x08048736 in _start ()
(gdb) c
Continuing.

Breakpoint 2, 0x08048bb0 in __libc_start_main ()
(gdb) bt
#0  0x08048bb0 in __libc_start_main ()
#1  0x08048757 in _start ()
(gdb) c
Continuing.

Breakpoint 3, 0x080488b0 in generic_start_main ()
(gdb) bt
#0  0x080488b0 in generic_start_main ()
#1  0x08048ccd in __libc_start_main ()
#2  0x08048757 in _start ()
(gdb) c
Continuing.

Breakpoint 4, 0x080492e0 in __libc_csu_init ()
(gdb) bt
#0  0x080492e0 in __libc_csu_init ()
#1  0x08048a7e in generic_start_main ()
#2  0x08048ccd in __libc_start_main ()
#3  0x08048757 in _start ()
(gdb) c
Continuing.

Breakpoint 5, 0x0804887c in main ()
(gdb) bt
#0  0x0804887c in main ()
(gdb) 


Breakpoint 5, 0x0804887c in main ()
(gdb) bt
#0  0x0804887c in main ()
(gdb) shell ps -a
  PID TTY          TIME CMD
26058 pts/2    00:00:00 gdb
26072 pts/2    00:00:00 shell
26082 pts/2    00:00:00 ps
(gdb) shell cat /proc/26072/maps
08048000-080e9000 r-xp 00000000 103:07 6686131                           /home/guybrush/Project/github/hack/shellcode/shell
080e9000-080eb000 rw-p 000a0000 103:07 6686131                           /home/guybrush/Project/github/hack/shellcode/shell
080eb000-0810e000 rw-p 00000000 00:00 0                                  [heap]
f7ff9000-f7ffc000 r--p 00000000 00:00 0                                  [vvar]
f7ffc000-f7ffe000 r-xp 00000000 00:00 0                                  [vdso]
fffdd000-ffffe000 rw-p 00000000 00:00 0                                  [stack]
(gdb) disassemble main
Dump of assembler code for function main:
=> 0x0804887c <+0>:	push   ebp
   0x0804887d <+1>:	mov    ebp,esp
   0x0804887f <+3>:	sub    esp,0x8
   0x08048882 <+6>:	mov    DWORD PTR [ebp-0x8],0x80bae08
   0x08048889 <+13>:	mov    DWORD PTR [ebp-0x4],0x0
   0x08048890 <+20>:	push   0x0
   0x08048892 <+22>:	lea    eax,[ebp-0x8]
   0x08048895 <+25>:	push   eax
   0x08048896 <+26>:	push   0x80bae0b
   0x0804889b <+31>:	call   0x806c740 <execve>
   0x080488a0 <+36>:	add    esp,0xc
   0x080488a3 <+39>:	mov    eax,0x0
   0x080488a8 <+44>:	leave  
   0x080488a9 <+45>:	ret    
End of assembler dump.
(gdb) i r
eax            0x804887c	134514812
ecx            0x1fb493c	33245500
edx            0xffffce14	-12780
ebx            0x80481a8	134513064
esp            0xffffcdec	0xffffcdec
ebp            0x1000	0x1000
esi            0x80ea00c	135176204
edi            0x8e	142
eip            0x804887c	0x804887c <main>
eflags         0x246	[ PF ZF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) 


(gdb) disassemble main
Dump of assembler code for function main:
=> 0x0804887c <+0>:	push   ebp
   0x0804887d <+1>:	mov    ebp,esp
   0x0804887f <+3>:	sub    esp,0x8
   0x08048882 <+6>:	mov    DWORD PTR [ebp-0x8],0x80bae08
   0x08048889 <+13>:	mov    DWORD PTR [ebp-0x4],0x0
   0x08048890 <+20>:	push   0x0
   0x08048892 <+22>:	lea    eax,[ebp-0x8]
   0x08048895 <+25>:	push   eax
   0x08048896 <+26>:	push   0x80bae0b
   0x0804889b <+31>:	call   0x806c740 <execve>
   0x080488a0 <+36>:	add    esp,0xc
   0x080488a3 <+39>:	mov    eax,0x0
   0x080488a8 <+44>:	leave  
   0x080488a9 <+45>:	ret    
End of assembler dump.
(gdb) i r
eax            0x804887c	134514812
ecx            0x1fb493c	33245500
edx            0xffffce14	-12780
ebx            0x80481a8	134513064
esp            0xffffcdec	0xffffcdec
ebp            0x1000	0x1000
esi            0x80ea00c	135176204
edi            0x8e	142
eip            0x804887c	0x804887c <main>
eflags         0x246	[ PF ZF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) 
eax            0x804887c	134514812
ecx            0x1fb493c	33245500
edx            0xffffce14	-12780
ebx            0x80481a8	134513064
esp            0xffffcdec	0xffffcdec
ebp            0x1000	0x1000
esi            0x80ea00c	135176204
edi            0x8e	142
eip            0x804887c	0x804887c <main>
eflags         0x246	[ PF ZF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) x/x $esp
0xffffcdec:	0x08048ad1
(gdb) x/x 0x08048ad1
0x8048ad1 <generic_start_main+545>:	0x8310c483
(gdb) 

(gdb) disassemble main
Dump of assembler code for function main:
=> 0x0804887c <+0>:	push   ebp
   0x0804887d <+1>:	mov    ebp,esp
   0x0804887f <+3>:	sub    esp,0x8
   0x08048882 <+6>:	mov    DWORD PTR [ebp-0x8],0x80bae08
   0x08048889 <+13>:	mov    DWORD PTR [ebp-0x4],0x0
   0x08048890 <+20>:	push   0x0
   0x08048892 <+22>:	lea    eax,[ebp-0x8]
   0x08048895 <+25>:	push   eax
   0x08048896 <+26>:	push   0x80bae0b
   0x0804889b <+31>:	call   0x806c740 <execve>
   0x080488a0 <+36>:	add    esp,0xc
   0x080488a3 <+39>:	mov    eax,0x0
   0x080488a8 <+44>:	leave  
   0x080488a9 <+45>:	ret    
End of assembler dump.
(gdb) x/2s 0x80bae08
0x80bae08:	"sh"
0x80bae0b:	"/bin/sh"
(gdb) disassemble execve
Dump of assembler code for function execve:
   0x0806c740 <+0>:	push   ebx
   0x0806c741 <+1>:	mov    edx,DWORD PTR [esp+0x10]
   0x0806c745 <+5>:	mov    ecx,DWORD PTR [esp+0xc]
   0x0806c749 <+9>:	mov    ebx,DWORD PTR [esp+0x8]
   0x0806c74d <+13>:	mov    eax,0xb
   0x0806c752 <+18>:	call   DWORD PTR ds:0x80ea9f0
   0x0806c758 <+24>:	pop    ebx
   0x0806c759 <+25>:	cmp    eax,0xfffff001
   0x0806c75e <+30>:	jae    0x8070620 <__syscall_error>
   0x0806c764 <+36>:	ret    
End of assembler dump.
(gdb) 


